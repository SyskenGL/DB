/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.unina.db2019.operations;

import it.unina.db2019.project.DBConnection;
import java.sql.*;
import javax.swing.*;
import java.awt.Toolkit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import it.unina.db2019.project.*;

/**
 *
 * @author Sysken
 */
public class Associazione extends DefaultFrame {
    
    private boolean isLike = true;
    private Object bean;

    /**
     * Creates new customizer Associazione
     */
    public Associazione() {
        initComponents();

        setFrameTable(jTableAssociazione);
        setNomeTabella("ASSOCIAZIONE");
        this.setLocationRelativeTo(null);
        jComboBoxPartA.setEnabled(false);
        jComboBoxPartB.setEnabled(false);
        jComboBoxPartA.setFocusable(false);
        jComboBoxPartB.setFocusable(false);
        jComboBoxType.setEnabled(false);
        jComboBoxType.setFocusable(false);
        jTextFieldRoleA.setEnabled(false);
        jTextFieldRoleB.setEnabled(false);
        jTextFieldCD.setEnabled(false);
        jTextFieldCardInfA.setEnabled(false);
        jTextFieldCardInfB.setEnabled(false);
        jTextFieldCardSupA.setEnabled(false);
        jTextFieldCardSupB.setEnabled(false);
        jTableAssociazione.setFocusable(false);
        jTextFieldClasseP1.setEnabled(false);
        jTextFieldClasseP2.setEnabled(false);
        jTextFieldDescrizione.setEnabled(false);
        jTextFieldNome.setEnabled(false);
        jRadioButtonEqual.setVisible(false);
        jRadioButtonEqual.setFocusable(false);
        jRadioButtonNavA.setEnabled(false);
        jRadioButtonNavA.setFocusable(false);
        jRadioButtonNavB.setEnabled(false);
        jRadioButtonNavB.setFocusable(false);
        jRadioButtonQualifyA.setEnabled(false);
        jRadioButtonQualifyA.setFocusable(false);
        jRadioButtonQualifyB.setEnabled(false);
        jRadioButtonQualifyB.setFocusable(false);
        Aggiorna();     
        jTableAssociazione.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                if(jTableAssociazione.getSelectedRow() != -1){
                    getInfo();
                }
            }
        });
    }
    
    public void setObject(Object bean) {
        this.bean = bean;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNome = new javax.swing.JLabel();
        jLabelDescrizione = new javax.swing.JLabel();
        jLabelClassDiagram = new javax.swing.JLabel();
        jLabelRoleA = new javax.swing.JLabel();
        jLabelCardInfB = new javax.swing.JLabel();
        jLabelCardSupA = new javax.swing.JLabel();
        jLabelPartB = new javax.swing.JLabel();
        jLabelCardInfA = new javax.swing.JLabel();
        jLabelRoleB = new javax.swing.JLabel();
        jLabelTipo = new javax.swing.JLabel();
        jLabelCardSupB = new javax.swing.JLabel();
        jLabelPartA = new javax.swing.JLabel();
        jLabelNavA = new javax.swing.JLabel();
        jLabelNavB = new javax.swing.JLabel();
        jLabelQualifyA = new javax.swing.JLabel();
        jLabelQualifyB = new javax.swing.JLabel();
        jLabelClasseA = new javax.swing.JLabel();
        jLabelClasseB = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jComboBoxType = new javax.swing.JComboBox<>();
        jTextFieldDescrizione = new javax.swing.JTextField();
        jTextFieldCD = new javax.swing.JTextField();
        jTextFieldCardInfA = new javax.swing.JTextField();
        jTextFieldCardInfB = new javax.swing.JTextField();
        jTextFieldCardSupA = new javax.swing.JTextField();
        jTextFieldCardSupB = new javax.swing.JTextField();
        jComboBoxPartA = new javax.swing.JComboBox<>();
        jComboBoxPartB = new javax.swing.JComboBox<>();
        jRadioButtonNavA = new javax.swing.JRadioButton();
        jRadioButtonNavB = new javax.swing.JRadioButton();
        jRadioButtonQualifyA = new javax.swing.JRadioButton();
        jRadioButtonQualifyB = new javax.swing.JRadioButton();
        jTextFieldClasseP1 = new javax.swing.JTextField();
        jTextFieldClasseP2 = new javax.swing.JTextField();
        jTextFieldRoleA = new javax.swing.JTextField();
        jTextFieldRoleB = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAssociazione = new javax.swing.JTable();
        jRadioButtonEqual = new javax.swing.JRadioButton();

        setTitle("UML STORAGE - ASSOCIAZIONE");
        setMinimumSize(new java.awt.Dimension(0, 890));
        setSize(new java.awt.Dimension(942, 890));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabelNome.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelNome.setText("Nome:");

        jLabelDescrizione.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelDescrizione.setText("Descrizione:");

        jLabelClassDiagram.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelClassDiagram.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/unina/db2019/operations/fk.png"))); // NOI18N
        jLabelClassDiagram.setText("| Class Diagram:");

        jLabelRoleA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelRoleA.setText("Ruolo P1:");

        jLabelCardInfB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelCardInfB.setText("Cardinalità INF. P2:");

        jLabelCardSupA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelCardSupA.setText("Cardinalità SUP. P1:");

        jLabelPartB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelPartB.setText("Tipo Partecipazione P2:");

        jLabelCardInfA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelCardInfA.setText("Cardinalità INF. P1:");

        jLabelRoleB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelRoleB.setText("Ruolo P2:");

        jLabelTipo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelTipo.setText("Tipo:");

        jLabelCardSupB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelCardSupB.setText("Cardinalità SUP. P2:");

        jLabelPartA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelPartA.setText("Tipo Partecipazione P1:");

        jLabelNavA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelNavA.setText("Navigabilità P1:");

        jLabelNavB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelNavB.setText("Navigabilità P2:");

        jLabelQualifyA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelQualifyA.setText("Qualificatore P1:");

        jLabelQualifyB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelQualifyB.setText("Qualificatore P2:");

        jLabelClasseA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelClasseA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/unina/db2019/operations/fk.png"))); // NOI18N
        jLabelClasseA.setText("| Classe P1:");

        jLabelClasseB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabelClasseB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/it/unina/db2019/operations/fk.png"))); // NOI18N
        jLabelClasseB.setText("| Classe P2:");

        jTextFieldNome.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldNome.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });

        jComboBoxType.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "semplice", "aggregazione", "composizione" }));
        jComboBoxType.setBorder(null);

        jTextFieldDescrizione.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldDescrizione.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldCD.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldCD.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldCardInfA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldCardInfA.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldCardInfB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldCardInfB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldCardSupA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldCardSupA.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldCardSupB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldCardSupB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jComboBoxPartA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBoxPartA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "semplice", "aggregata", "aggregante", "composta", "componente" }));
        jComboBoxPartA.setBorder(null);

        jComboBoxPartB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBoxPartB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "semplice", "aggregata", "aggregante", "composta", "componente" }));
        jComboBoxPartB.setBorder(null);

        jRadioButtonNavA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jRadioButtonNavA.setSelected(true);

        jRadioButtonNavB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jRadioButtonNavB.setSelected(true);

        jRadioButtonQualifyA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jRadioButtonQualifyB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jTextFieldClasseP1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldClasseP1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldClasseP2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldClasseP2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldRoleA.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldRoleA.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldRoleB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTextFieldRoleB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTableAssociazione.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableAssociazione);

        jRadioButtonEqual.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jRadioButtonEqual.setSelected(true);
        jRadioButtonEqual.setText("Like");
        jRadioButtonEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEqualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelPartA)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelCardSupA)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelRoleA)
                                    .addComponent(jLabelCardInfA)
                                    .addComponent(jLabelClassDiagram)
                                    .addComponent(jLabelDescrizione)
                                    .addComponent(jLabelTipo)
                                    .addComponent(jLabelNome)))
                            .addComponent(jLabelNavA)
                            .addComponent(jLabelQualifyA)
                            .addComponent(jLabelClasseA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(469, 469, 469))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldDescrizione, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButtonQualifyA)
                                            .addComponent(jComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jRadioButtonNavA)
                                            .addComponent(jTextFieldClasseP1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxPartA, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldCardSupA, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldCardInfA, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldRoleA, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(98, 98, 98)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabelCardInfB)
                                            .addComponent(jLabelRoleB)
                                            .addComponent(jLabelNavB)
                                            .addComponent(jLabelPartB)
                                            .addComponent(jLabelCardSupB)
                                            .addComponent(jLabelClasseB)
                                            .addComponent(jLabelQualifyB))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldCardSupB)
                                            .addComponent(jTextFieldCardInfB)
                                            .addComponent(jComboBoxPartB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jRadioButtonNavB)
                                            .addComponent(jRadioButtonQualifyB)
                                            .addComponent(jTextFieldClasseP2)
                                            .addComponent(jTextFieldRoleB, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonEqual))
                            .addComponent(jTextFieldCD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNome)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipo)
                    .addComponent(jComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDescrizione)
                    .addComponent(jTextFieldDescrizione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonEqual))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClassDiagram)
                    .addComponent(jTextFieldCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRoleA)
                    .addComponent(jLabelRoleB)
                    .addComponent(jTextFieldRoleB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldRoleA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardInfA)
                    .addComponent(jLabelCardInfB)
                    .addComponent(jTextFieldCardInfB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCardInfA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCardSupA)
                    .addComponent(jLabelCardSupB)
                    .addComponent(jTextFieldCardSupB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCardSupA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPartA)
                    .addComponent(jLabelPartB)
                    .addComponent(jComboBoxPartB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPartA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNavA)
                    .addComponent(jLabelNavB)
                    .addComponent(jRadioButtonNavA)
                    .addComponent(jRadioButtonNavB))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQualifyA)
                    .addComponent(jLabelQualifyB)
                    .addComponent(jRadioButtonQualifyA)
                    .addComponent(jRadioButtonQualifyB))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClasseA)
                    .addComponent(jLabelClasseB)
                    .addComponent(jTextFieldClasseP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldClasseP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void jRadioButtonEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEqualActionPerformed
        isLike = !isLike;
    }//GEN-LAST:event_jRadioButtonEqualActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DBOperation.currentlyOpen[3] = null;
    }//GEN-LAST:event_formWindowClosing

    @Override
    public void setModalita(int modo){
        super.setModalita(modo);
        switch (modo) {
           case INSERISCI:
              setEnabledjTextFieldPK(true);
              jComboBoxPartA.setEnabled(true);
              jComboBoxPartB.setEnabled(true);
              jComboBoxType.setEnabled(true);
              jTextFieldRoleA.setEnabled(true);
              jTextFieldRoleB.setEnabled(true);
              jTextFieldCD.setEnabled(true);
              jTextFieldCardInfA.setEnabled(true);
              jTextFieldCardInfB.setEnabled(true);
              jTextFieldCardSupA.setEnabled(true);
              jTextFieldCardSupB.setEnabled(true);
              jTextFieldClasseP1.setEnabled(true);
              jTextFieldClasseP2.setEnabled(true);
              jTextFieldDescrizione.setEnabled(true);
              jTextFieldNome.setEnabled(true);
              jRadioButtonNavA.setEnabled(true);
              jRadioButtonNavB.setEnabled(true);
              jRadioButtonQualifyA.setEnabled(true);
              jRadioButtonQualifyB.setEnabled(true);
              break;
           case MODIFICA:
              setEnabledjTextFieldPK(false);
              jComboBoxPartA.setEnabled(false);
              jComboBoxPartB.setEnabled(false);
              jComboBoxType.setEnabled(false);
              jTextFieldRoleA.setEnabled(false);
              jTextFieldRoleB.setEnabled(false);
              jTextFieldCD.setEnabled(false);
              jTextFieldCardInfA.setEnabled(false);
              jTextFieldCardInfB.setEnabled(false);
              jTextFieldCardSupA.setEnabled(false);
              jTextFieldCardSupB.setEnabled(false);
              jTextFieldClasseP1.setEnabled(false);
              jTextFieldClasseP2.setEnabled(false);
              jTextFieldDescrizione.setEnabled(true);
              jTextFieldNome.setEnabled(true);
              jRadioButtonNavA.setEnabled(false);
              jRadioButtonNavB.setEnabled(false);
              jRadioButtonQualifyA.setEnabled(false);
              jRadioButtonQualifyB.setEnabled(false);
              break;
           case ELIMINA:
              setEnabledjTextFieldPK(false);
              jComboBoxPartA.setEnabled(false);
              jComboBoxPartB.setEnabled(false);
              jComboBoxType.setEnabled(false);
              jTextFieldRoleA.setEnabled(false);
              jTextFieldRoleB.setEnabled(false);
              jTextFieldCD.setEnabled(false);
              jTextFieldCardInfA.setEnabled(false);
              jTextFieldCardInfB.setEnabled(false);
              jTextFieldCardSupA.setEnabled(false);
              jTextFieldCardSupB.setEnabled(false);
              jTextFieldClasseP1.setEnabled(false);
              jTextFieldClasseP2.setEnabled(false);
              jTextFieldDescrizione.setEnabled(false);
              jTextFieldNome.setEnabled(false);
              jRadioButtonNavA.setEnabled(false);
              jRadioButtonNavB.setEnabled(false);
              jRadioButtonQualifyA.setEnabled(false);
              jRadioButtonQualifyB.setEnabled(false);
              break;
           case RICERCA:
              setEnabledjTextFieldPK(true);
              jComboBoxPartA.setEnabled(false);
              jComboBoxPartB.setEnabled(false);
              jComboBoxType.setEnabled(true);
              jTextFieldRoleA.setEnabled(false);
              jTextFieldRoleB.setEnabled(false);
              jTextFieldCD.setEnabled(true);
              jTextFieldCardInfA.setEnabled(false);
              jTextFieldCardInfB.setEnabled(false);
              jTextFieldCardSupA.setEnabled(false);
              jTextFieldCardSupB.setEnabled(false);
              jTextFieldClasseP1.setEnabled(false);
              jTextFieldClasseP2.setEnabled(false);
              jTextFieldDescrizione.setEnabled(true);
              jTextFieldNome.setEnabled(true);
              jRadioButtonNavA.setEnabled(false);
              jRadioButtonNavB.setEnabled(false);
              jRadioButtonQualifyA.setEnabled(false);
              jRadioButtonQualifyB.setEnabled(false);
              jRadioButtonEqual.setVisible(true);
              break;
        }
    }

    @Override
    protected PreparedStatement selectAll(){
        Connection con;
        PreparedStatement st = null;
        super.selectAll();
        query = query + "ORDER BY ID_ASSOCIAZIONE ";
        try {
           con = DBConnection.getConnection();
           st = con.prepareStatement(query, ResultSet.TYPE_SCROLL_INSENSITIVE,
                   ResultSet.CONCUR_READ_ONLY); 
        } catch (SQLException e) {
        }
        return st;
    }

    @Override
    protected void pulisci(){
        super.pulisci();
        jComboBoxPartA.setSelectedIndex(0);
        jComboBoxPartB.setSelectedIndex(0);
        jComboBoxType.setSelectedIndex(0);
        jTextFieldRoleA.setText("");
        jTextFieldRoleB.setText("");
        jTextFieldCD.setText("");
        jTextFieldCardInfA.setText("");
        jTextFieldCardInfB.setText("");
        jTextFieldCardSupA.setText("");
        jTextFieldCardSupB.setText("");
        jTextFieldClasseP1.setText("");
        jTextFieldClasseP2.setText("");
        jTextFieldDescrizione.setText("");
        jTextFieldNome.setText("");
        jRadioButtonEqual.setSelected(true);
        jRadioButtonNavA.setSelected(true);
        jRadioButtonNavB.setSelected(true);
        jRadioButtonQualifyA.setSelected(false);
        jRadioButtonQualifyB.setSelected(false);
        jTableAssociazione.clearSelection();
    }

    @Override
    protected void getInfo(){
        selectedRow = jTableAssociazione.getSelectedRow();
        setJTextFieldPK((jTableAssociazione.getValueAt(selectedRow, 0)).toString());
        jTextFieldNome.setText((String)jTableAssociazione.getValueAt(selectedRow, 1));
        jTextFieldDescrizione.setText((String)jTableAssociazione.getValueAt(selectedRow, 2));
        String type = (jTableAssociazione.getValueAt(selectedRow, 3)).toString();
        if(type.equals("semplice")){
            jComboBoxType.setSelectedIndex(1);
        } else if(type.equals("aggregazione")){
            jComboBoxType.setSelectedIndex(2);
        } else{
            jComboBoxType.setSelectedIndex(3);
        }
        jTextFieldCD.setText((jTableAssociazione.getValueAt(selectedRow, 4)).toString());
    }

    @Override
    protected void Aggiorna(){
        PreparedStatement st = selectAll();
        eseguiQuery(st);
    }

    @Override
    protected PreparedStatement opInserisci(Connection c)
           throws SQLException{
        String cmdIns;
        PreparedStatement st;
        cmdIns = "insert into " + DBConnection.schema + ".VIEW_ASSOCIAZIONE (ID_Associazione, Nome, Descrizione, Tipo, FK_ClassDiagram,"
                + "RuoloP1, cardinalitaInfP1, cardinalitaSupP1, TipoP1, NavigabilitaP1, QualificatoreP1, FK_ClasseP1,"
                + "RuoloP2, cardinalitaInfP2, cardinalitaSupP2, TipoP2, NavigabilitaP2, QualificatoreP2, FK_ClasseP2) " 
                + "values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        st = c.prepareStatement(cmdIns);
        if(getCodice().getText().equals("")){
            st.setNull(1, Types.INTEGER);
        } else{
            st.setInt(1, Integer.valueOf(getCodice().getText()));
        }
        if(jTextFieldNome.getText().equals("")){
          st.setNull(2, Types.VARCHAR);
        } else{
          st.setString(2, jTextFieldNome.getText());
        }
        if(jTextFieldDescrizione.getText().equals("")){
          st.setNull(3, Types.VARCHAR);
        } else{
          st.setString(3, jTextFieldDescrizione.getText());
        }
        st.setString(4, jComboBoxType.getSelectedItem().toString());
        st.setInt(5, Integer.valueOf(jTextFieldCD.getText()));
        
        if(jTextFieldRoleA.getText().equals("")){
          st.setNull(6, Types.VARCHAR);
        } else{
          st.setString(6, jTextFieldRoleA.getText());
        }
        st.setString(7, jTextFieldCardInfA.getText());
        st.setString(8, jTextFieldCardSupA.getText());
        st.setString(9, jComboBoxPartA.getSelectedItem().toString());
        if(jRadioButtonNavA.isSelected()){
            st.setInt(10, 1);
        } else{
            st.setInt(10, 0);
        }
        if(jRadioButtonQualifyA.isSelected()){
            st.setInt(11, 1);
        } else{
            st.setInt(11, 0);
        }
        st.setInt(12, Integer.valueOf(jTextFieldClasseP1.getText()));
        
        if(jTextFieldRoleB.getText().equals("")){
          st.setNull(13, Types.VARCHAR);
        } else{
          st.setString(13, jTextFieldRoleB.getText());
        }
        st.setString(14, jTextFieldCardInfB.getText());
        st.setString(15, jTextFieldCardSupB.getText());
        st.setString(16, jComboBoxPartB.getSelectedItem().toString());
        if(jRadioButtonNavB.isSelected()){
            st.setInt(17, 1);
        } else{
            st.setInt(17, 0);
        }
        if(jRadioButtonQualifyB.isSelected()){
            st.setInt(18, 1);
        } else{
            st.setInt(18, 0);
        }
        st.setInt(19, Integer.valueOf(jTextFieldClasseP2.getText()));

        return st;
    }

    @Override
    protected PreparedStatement opModifica(Connection c)
           throws SQLException{
        PreparedStatement st = null;
        if(!getCodice().getText().equals("")){
            String cmdUp;
            cmdUp = "update " + DBConnection.schema + ".VIEW_ASSOCIAZIONE_UPD"
                            + " set Nome = ?, " 
                            + "     Descrizione = ? "
                            + " where ID_Associazione = ? ";
            st = c.prepareStatement(cmdUp);
            st.setString(1, jTextFieldNome.getText());
            st.setString(2, jTextFieldDescrizione.getText());
            st.setInt(3, Integer.valueOf(getCodice().getText()));
        } else{
            JOptionPane.showMessageDialog(this, "Nessun record selezionato!",
                                          "Errore", JOptionPane.ERROR_MESSAGE);
          }
        return st;
    }

    @Override
    protected PreparedStatement opRicerca(Connection c)
           throws SQLException{
        PreparedStatement st = null;
        String cmdSrc;
        int index = 1;
        Pattern pat;
        Matcher match;
        String descrizione;
        cmdSrc = "select * from " + DBConnection.schema + ".ASSOCIAZIONE where";
        if (getCodice().getText().length() > 0) {
           cmdSrc += " ID_Associazione = ? and";
        }
        if (jTextFieldNome.getText().length() > 0) {
           cmdSrc += " Nome = ? and";
        }
        descrizione = jTextFieldDescrizione.getText();
        if (descrizione.length() > 0) {
           if(isLike){
               cmdSrc += " Descrizione like ? and";
               descrizione = "%"+descrizione+"%";  
           } else{
               cmdSrc += " Descrizione = ? and";
           }
        }
        if (!jComboBoxType.getSelectedItem().toString().equals(" ")) {
           cmdSrc += " Tipo = ? and";
        }
        if (jTextFieldCD.getText().length() > 0) {
           cmdSrc += " FK_ClassDiagram = ? and";
        }
        pat = Pattern.compile("(where|and)$"); 
        match = pat.matcher(cmdSrc);
        cmdSrc = match.replaceAll("");
        cmdSrc += " ORDER BY ID_Associazione";
        try {
           st = c.prepareStatement(cmdSrc, ResultSet.TYPE_SCROLL_INSENSITIVE,
                   ResultSet.CONCUR_READ_ONLY); 
        } catch (SQLException e) {
        }
        if(st != null){
            if (getCodice().getText().length() > 0) {
               st.setInt(index++, Integer.valueOf(getCodice().getText()));
            }
            if (jTextFieldNome.getText().length() > 0) {
               st.setString(index++, jTextFieldNome.getText());
            }
            if (descrizione.length() > 0) {
               st.setString(index++, descrizione);
            }
            if (!jComboBoxType.getSelectedItem().toString().equals(" ")) {
               st.setString(index++, jComboBoxType.getSelectedItem().toString());
            }
            if (jTextFieldCD.getText().length() > 0) {
               st.setInt(index++, Integer.valueOf(jTextFieldCD.getText()));
            }
        }
        return st; 
    }
    
    @Override
    protected PreparedStatement opElimina(Connection c)
           throws SQLException{
        PreparedStatement st = null;
        if(!getCodice().getText().equals("")){
            String cmdDel;
            cmdDel = "delete from " + DBConnection.schema + ".ASSOCIAZIONE where "
                      + "ID_Associazione = ? ";
            st = c.prepareStatement(cmdDel);
            st.setInt(1, Integer.valueOf(getCodice().getText()));
        } else{
            JOptionPane.showMessageDialog(this, "Nessun record selezionato!",
                                          "Errore", JOptionPane.ERROR_MESSAGE);
        }
        return st;
    }
  
    @Override
    protected void reselectPrevRow(){
        if(jTableAssociazione.getRowCount() > 0){
            switch(getModalita()){
                case MODIFICA:
                    jTableAssociazione.setRowSelectionInterval(selectedRow, selectedRow);
                    break;
                case INSERISCI:
                    jTableAssociazione.setRowSelectionInterval(jTableAssociazione.getRowCount()-1, jTableAssociazione.getRowCount()-1);
                    break;
                case ELIMINA:
                    if(selectedRow < jTableAssociazione.getRowCount()){
                            jTableAssociazione.setRowSelectionInterval(selectedRow, selectedRow);
                    } else{
                        jTableAssociazione.setRowSelectionInterval(selectedRow-1, selectedRow-1);
                    }     
            }
        }    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxPartA;
    private javax.swing.JComboBox<String> jComboBoxPartB;
    private javax.swing.JComboBox<String> jComboBoxType;
    private javax.swing.JLabel jLabelCardInfA;
    private javax.swing.JLabel jLabelCardInfB;
    private javax.swing.JLabel jLabelCardSupA;
    private javax.swing.JLabel jLabelCardSupB;
    private javax.swing.JLabel jLabelClassDiagram;
    private javax.swing.JLabel jLabelClasseA;
    private javax.swing.JLabel jLabelClasseB;
    private javax.swing.JLabel jLabelDescrizione;
    private javax.swing.JLabel jLabelNavA;
    private javax.swing.JLabel jLabelNavB;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelPartA;
    private javax.swing.JLabel jLabelPartB;
    private javax.swing.JLabel jLabelQualifyA;
    private javax.swing.JLabel jLabelQualifyB;
    private javax.swing.JLabel jLabelRoleA;
    private javax.swing.JLabel jLabelRoleB;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JRadioButton jRadioButtonEqual;
    private javax.swing.JRadioButton jRadioButtonNavA;
    private javax.swing.JRadioButton jRadioButtonNavB;
    private javax.swing.JRadioButton jRadioButtonQualifyA;
    private javax.swing.JRadioButton jRadioButtonQualifyB;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAssociazione;
    private javax.swing.JTextField jTextFieldCD;
    private javax.swing.JTextField jTextFieldCardInfA;
    private javax.swing.JTextField jTextFieldCardInfB;
    private javax.swing.JTextField jTextFieldCardSupA;
    private javax.swing.JTextField jTextFieldCardSupB;
    private javax.swing.JTextField jTextFieldClasseP1;
    private javax.swing.JTextField jTextFieldClasseP2;
    private javax.swing.JTextField jTextFieldDescrizione;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldRoleA;
    private javax.swing.JTextField jTextFieldRoleB;
    // End of variables declaration//GEN-END:variables
}
